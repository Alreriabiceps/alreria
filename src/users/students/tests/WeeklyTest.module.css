/* Blueprint Capsule Corp Theme Variables */
:root {
  --dbz-orange: #f39c12;
  --dbz-blue: #3498db;
  --dbz-red: #e74c3c;
  --dbz-yellow: #f1c40f;
  --dbz-dark-blue: #2c3e50;
  --dbz-light-gray: #ecf0f1;
  --dbz-dark-gray: #34495e;
  --dbz-black: #1C1C1C;

  --blueprint-bg: #0D131A;
  --blueprint-grid-line: rgba(173, 216, 230, 0.35);
  --blueprint-grid-line-strong: rgba(173, 216, 230, 0.6);
  --blueprint-text: #E0F2F7;
  --blueprint-panel-bg: rgba(30, 45, 60, 0.85);
  --blueprint-panel-border: var(--blueprint-grid-line-strong);
  --blueprint-accent: var(--dbz-yellow); /* Key accent color */
  --blueprint-accent-rgb: 241, 196, 15; /* For rgba() */
  --blueprint-accent-text-dark: var(--dbz-black);
  --blueprint-shadow: rgba(0, 0, 0, 0.4);

  --font-header: 'Bangers', cursive;
  --font-body: 'Montserrat', sans-serif;
  --font-accent: 'Roboto Condensed', sans-serif;
}

/* --- Keyframe Animations (Add if not present, or reuse) --- */
@keyframes fadeInPage {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes panelFlyIn { /* Standardized panel animation */
  from { opacity: 0; transform: translateY(30px) scale(0.98); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}

@keyframes fadeInSlideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes powerUpBg { /* Match dashboard/versus animation */
  from { opacity: 0; transform: scale(0.95); }
  to { opacity: 1; transform: scale(1); }
}

@keyframes titleSmash { /* Match dashboard/versus animation */
  0% { opacity: 0; transform: scale(1.5) translateY(-20px); }
  60% { opacity: 1; transform: scale(0.9) translateY(10px); }
  100% { opacity: 1; transform: scale(1) translateY(0); }
}

/* --- Animation Applications --- */

.testContainer {
  /* ... existing styles ... */
  /* animation: fadeInPage 0.7s ease-out forwards; */ /* Old animation */
  animation: powerUpBg 0.7s ease-out forwards;
  background-color: var(--blueprint-bg);
  color: var(--blueprint-text);
  font-family: var(--font-body);
  min-height: 100vh; /* Ensure full page background */
  padding: 25px 15px 50px 15px; /* Consistent padding */
  display: flex; /* Added for alignment if needed */
  flex-direction: column; /* Added for alignment if needed */
  align-items: center; /* Added for alignment if needed */
  overflow-x: hidden; /* Prevent horizontal scroll */
}

.testPanel { /* Main content panel */
  /* ... existing styles ... */
  opacity: 0;
  /* animation: panelFlyInWeeklyTest 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards; */ /* Old animation name */
  animation: panelFlyIn 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.3s forwards; /* Use panelFlyIn, delay after powerUpBg */
  /* animation-delay: 0.2s; */ /* Old delay */
  background: var(--blueprint-panel-bg);
  border: 1.5px solid var(--blueprint-panel-border);
  border-radius: 15px;
  box-shadow: 0 6px 20px var(--blueprint-shadow), inset 0 0 12px rgba(0,0,0,0.25);
  backdrop-filter: blur(3px);
  transition: box-shadow 0.2s ease-out, border-color 0.2s ease-out, transform 0.2s ease-out;
  width: 100%; /* Ensure it takes available width */
  max-width: 900px; /* Or a suitable max-width for test content */
  padding: 20px 25px; /* Consistent padding */
}
.testPanel:hover {
  border-color: var(--blueprint-accent);
  box-shadow: 0 8px 25px var(--blueprint-shadow), 0 0 15px var(--blueprint-accent);
  transform: translateY(-5px) scale(1.02);
}

.testTitle { /* Main title of the test page, outside testPanel */
  /* ... existing styles ... */
  opacity: 0;
  /* animation: fadeInSlideUp 0.5s ease-out forwards; */ /* Old animation */
  /* animation-delay: 0.5s; */ /* Old delay */
  animation: titleSmash 0.5s ease-out 0.4s backwards; /* Delay after powerUpBg, before panel typically */
  font-family: var(--font-header);
  font-size: 4rem; /* Match versus mode */
  color: var(--blueprint-accent);
  letter-spacing: 3px;
  text-shadow:
    3px 3px 0 var(--dbz-black),
    -1px -1px 0 var(--blueprint-bg),
    1px -1px 0 var(--blueprint-bg),
    -1px 1px 0 var(--blueprint-bg),
    1px 1px 0 var(--blueprint-bg);
  margin-bottom: 20px; /* Increased margin for better separation */
  line-height: 1.1;
  text-align: center; /* Ensure title is centered */
  width: 100%; /* Ensure it takes width for centering */
  max-width: 1000px; /* Match versus pageHeader */
  position: relative; /* For z-index if needed */
  z-index: 1;
}

/* Start Test Screen Specifics */
.startScreenContainer .pageTitle, /* If using a generic pageTitle style for the start screen's title */
.startScreenContainer .startTestInstructions,
.startScreenContainer .startTestButton {
    opacity: 0;
    animation: fadeInSlideUp 0.5s ease-out forwards;
}

/* .startScreenContainer .pageTitle { animation-delay: 0.4s; } Old delay */
/* .startScreenContainer .startTestInstructions { animation-delay: 0.5s; } Old delay */
/* .startScreenContainer .startTestButton { animation-delay: 0.6s; } Old delay */

/* New delays, assuming .testPanel animation ends around 0.3s (start) + 0.6s (duration) = 0.9s */
.startScreenContainer .pageTitle { 
  font-family: var(--font-header); /* Ensure font consistency */
  font-size: 2.5rem; /* Appropriate size for this context */
  color: var(--blueprint-accent);
  text-shadow: 2px 2px 0 var(--dbz-black); /* Simpler shadow for sub-header */
  animation-delay: 0.8s; /* After panel and main title are mostly done */
}
.startScreenContainer .startTestInstructions { animation-delay: 0.9s; }
.startScreenContainer .startTestButton { animation-delay: 1.0s; }

/* Question Display - animate when it becomes visible */
/* This might be better handled by transition classes if questions change dynamically */
/* For initial load of the question area: */
.questionDisplayContainer { /* Assuming this is the wrapper for question text */
  opacity: 0;
  animation: fadeInSlideUp 0.5s ease-out forwards;
  /* animation-delay: 0.8s; */ /* Old delay */
  animation-delay: 0.7s; /* Appears after panel typically */
}

/* Answer Grid and Buttons */
.answerGrid { /* If the grid itself should animate as a block */
  /* opacity: 0; */
  /* animation: fadeInSlideUp 0.5s ease-out forwards; */
  /* animation-delay: 1.0s; */
}

.answerGrid .answerButton {
  opacity: 0;
  animation: fadeInSlideUp 0.4s ease-out forwards;
  /* Staggering individual answer buttons */
}
/* Adjust base delay for answer buttons */
/* .answerGrid .answerButton:nth-child(1) { animation-delay: 1.0s; } Old delay */
/* .answerGrid .answerButton:nth-child(2) { animation-delay: 1.1s; } Old delay */
/* .answerGrid .answerButton:nth-child(3) { animation-delay: 1.2s; } Old delay */
/* .answerGrid .answerButton:nth-child(4) { animation-delay: 1.3s; } Old delay */

.answerGrid .answerButton:nth-child(1) { animation-delay: 0.9s; } /* After question display */
.answerGrid .answerButton:nth-child(2) { animation-delay: 1.0s; }
.answerGrid .answerButton:nth-child(3) { animation-delay: 1.1s; }
.answerGrid .answerButton:nth-child(4) { animation-delay: 1.2s; } /* If max 4 answers */

/* Navigation Buttons */
.navigationButtons {
    opacity: 0;
    animation: fadeInSlideUp 0.5s ease-out forwards;
    /* animation-delay: 1.4s; */ /* Old delay */
    animation-delay: 1.3s; /* After answers typically */
}

/* You might have specific classes for prev/next/submit buttons */
/* .navigationButtons .gameButton { ... } */

/* Test Info Bar (if any) */
.testInfoBar {
    opacity: 0;
    animation: fadeInSlideUp 0.5s ease-out forwards;
    /* animation-delay: 0.6s; */ /* Old delay */
    animation-delay: 0.5s; /* Early appearance, around when main title is animating */
    background: rgba(0,0,0,0.2); /* Example subtle background */
    padding: 8px 15px;
    border-radius: 8px;
    margin-bottom: 15px;
    color: var(--blueprint-text);
    font-family: var(--font-accent);
}

/* --- Button Hover/Active Effects (Blueprint Theme Aligned) --- */
/* Base style for buttons - can be a new class or applied to existing ones */
.themedButton { /* New base class to ensure consistency */
  font-family: var(--font-header);
  font-size: 1.2rem;
  letter-spacing: 1.5px;
  color: var(--blueprint-accent-text-dark);
  background: var(--blueprint-accent);
  padding: 10px 25px;
  border-radius: 25px;
  border: 2px solid var(--dbz-black);
  text-transform: uppercase;
  cursor: pointer;
  transition: transform 0.15s ease-out, box-shadow 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  box-shadow: 3px 3px 0 var(--dbz-black);
  user-select: none;
  white-space: nowrap;
}

.themedButton:hover:not([disabled]) {
  background: var(--dbz-orange); /* Orange hover like in Versus */
  color: var(--blueprint-text); /* Light text on orange hover */
  transform: translateY(-3px) scale(1.03);
  box-shadow: 5px 5px 0 var(--dbz-black), 0 0 15px var(--dbz-orange);
}

.themedButton:active:not([disabled]) {
  transform: translateY(1px) scale(1.00); /* Press effect */
  box-shadow: 2px 2px 0 var(--dbz-black), inset 0 0 8px rgba(0,0,0,0.3);
  transition-duration: 0.08s;
}

.themedButton:disabled {
  background: var(--dbz-dark-gray) !important;
  color: var(--blueprint-text) !important;
  opacity: 0.6 !important; /* Adjusted for better visibility */
  cursor: not-allowed !important;
  box-shadow: 1px 1px 0 var(--dbz-black) !important;
  transform: none !important;
  border-color: var(--dbz-dark-gray) !important; /* Match background for disabled border */
  /* filter: grayscale(30%); */ /* Optional: keep if desired */
}

/* Apply .themedButton to existing button classes using composes */
.answerButton,
.navigationButtons button, /* This targets buttons inside .navigationButtons */
.startTestButton {
  composes: themedButton;
  /* Remove any existing transition, transform, box-shadow, background-color, color related to hover/active states
     as they are now handled by .themedButton. Specific layout styles (margin, padding if different, etc.) can remain. */
  /* Example: If .answerButton needs a different font-size or padding: */
  /* font-size: 1rem; */
  /* padding: 8px 15px; */
}

/* Remove or comment out old hover/active effects for these buttons */
/*
.answerButton:not([disabled]):hover,
.navigationButtons button:not([disabled]):hover,
.startTestButton:not([disabled]):hover {
  transform: scale(1.05);
  box-shadow: 0 6px 20px rgba(var(--blueprint-accent-rgb), 0.35), 
              0 2px 8px rgba(0,0,0,0.2);
}

.answerButton:not([disabled]):active,
.navigationButtons button:not([disabled]):active,
.startTestButton:not([disabled]):active {
  transform: scale(1.02);
  box-shadow: 0 3px 10px rgba(var(--blueprint-accent-rgb), 0.25),
              0 1px 4px rgba(0,0,0,0.15);
  transition-duration: 0.08s;
} 
*/

/* --- Result Modal Styles (Blueprint Theme) --- */
.resultModalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.75); /* Dark semi-transparent overlay */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  opacity: 0;
  animation: fadeInPage 0.3s ease-out forwards;
}

.resultModal {
  composes: testPanel; /* Inherit panel styles: background, border, shadow, etc. */
  /* Override or add specific modal styles if needed */
  min-width: 400px;
  max-width: 550px;
  padding: 25px 30px; /* Slightly more padding if desired */
  animation: panelFlyIn 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.1s forwards; /* slightly delayed pop-in */
  text-align: center;
}

.resultTitle {
  font-family: var(--font-header);
  color: var(--blueprint-accent);
  font-size: 2.8rem; /* Prominent title */
  letter-spacing: 2px;
  text-shadow: 2px 2px 0 var(--dbz-black), 1px 1px 3px rgba(0,0,0,0.5);
  margin-bottom: 25px;
}

.resultContent {
  margin-bottom: 30px;
  font-size: 1.1rem;
}

.resultRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
  border-bottom: 1px solid var(--blueprint-grid-line);
  color: var(--blueprint-text);
}
.resultRow:last-child {
  border-bottom: none;
}
.resultRow span:first-child {
  font-weight: 600;
  color: var(--blueprint-text_muted, #aabbcc); /* Softer color for label if desired */
}
.resultRow span:last-child {
  font-weight: bold;
  font-size: 1.2em;
}

/* Loading state within modal */
.loadingMessage {
  font-family: var(--font-accent);
  font-size: 1.5rem;
  color: var(--blueprint-text);
  margin-bottom: 20px;
}

/* Basic spinner - replace with a more themed one if available or desired */
.spinner {
  border: 5px solid var(--blueprint-grid-line);
  border-top: 5px solid var(--blueprint-accent);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
  margin: 0 auto; /* Center the spinner */
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Close button for the modal */
.closeButton { /* This class is used in ResultModal.jsx */
  composes: themedButton; /* Apply the Blueprint button style */
  /* Add any specific overrides if needed, e.g., different size or color variant */
  background-color: var(--dbz-dark-blue); /* Example: a secondary color */
  color: var(--blueprint-text);
  padding: 12px 30px; /* Make it a bit larger */
}
.closeButton:hover:not([disabled]) {
  background-color: var(--dbz-blue); /* Hover for secondary color */
  box-shadow: 5px 5px 0 var(--dbz-black), 0 0 15px var(--dbz-blue);
}

/* --- Utility Color Classes for Modal --- */
.scoreHigh {
  color: #4CAF50; /* Green for high scores - consider a theme variable if available */
  /* color: var(--blueprint-success-text, #4CAF50); */
}
.scoreMedium {
  color: #FFC107; /* Amber for medium scores - consider a theme variable */
  /* color: var(--blueprint-warning-text, #FFC107); */
}
.scoreLow {
  color: #F44336; /* Red for low scores - consider a theme variable */
  /* color: var(--blueprint-danger-text, #F44336); */
}

.pointsPositive {
  color: var(--blueprint-accent); /* Use accent for positive points */
}
.pointsNegative {
  color: #E74C3C; /* Red for negative points */
  /* color: var(--blueprint-danger-text, #E74C3C); */
}
.pointsNeutral {
  color: var(--blueprint-text); /* Standard text color for neutral points */
} 