/* Styles for RpsPhase Component - Enhanced Dashboard Inspired */

/* Import Fonts (if not globally available) */
@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");
@import url("https://fonts.googleapis.com/css2?family=VT323&display=swap");

/* --- Keyframes for Animations --- */
@keyframes fadeInScaleUp {
  from {
    opacity: 0;
    transform: scale(0.9);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* New animation for choice buttons appearing */
@keyframes pixelPopIn {
  0% {
    opacity: 0;
    transform: scale(0.5) translateY(10px);
  }

  60% {
    opacity: 1;
    transform: scale(1.05) translateY(0);
  }

  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* New animation for countdown timer (apply to timer element in JSX) */
@keyframes pixelScalePulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }

  50% {
    transform: scale(1.15);
    opacity: 0.7;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* New subtle pulse for modal border */
@keyframes subtleBorderPulse {

  0%,
  100% {
    border-color: var(--color-panel-border);
    box-shadow: var(--shadow-depth-2) var(--shadow-depth-2) 0 0 var(--color-pixel-shadow), 0 0 5px rgba(0, 255, 157, 0.3);
    /* Subtle glow */
  }

  50% {
    border-color: var(--color-accent-hover);
    box-shadow: var(--shadow-depth-2) var(--shadow-depth-2) 0 0 var(--color-pixel-shadow), 0 0 12px var(--color-accent-hover);
    /* Brighter glow */
  }
}

@keyframes pulseGlow {

  0%,
  100% {
    box-shadow: 4px 4px 0 0 var(--color-win), 0 0 10px rgba(46, 204, 113, 0.5);
    /* Adjusted glow */
    border-color: var(--color-win);
  }

  50% {
    box-shadow: 4px 4px 0 0 var(--color-win), 0 0 20px var(--color-win);
    /* More intense glow */
    border-color: var(--color-win);
  }
}

@keyframes pulseText {

  0%,
  100% {
    opacity: 0.8;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.03);
  }
}

/* New animation for winner attacking */
@keyframes clashAttack {
  0% {
    transform: translate(0, 0) scale(1);
  }

  40% {
    transform: translate(var(--attack-translate-x, -10px), 0) scale(1.25);
  }

  /* Increased scale */
  60% {
    transform: translate(calc(var(--attack-translate-x, -10px) * 0.9), 0) scale(1.15);
  }

  /* Slight bounce back */
  100% {
    transform: translate(0, 0) scale(1);
  }
}

/* New animation for loser getting hit */
@keyframes clashImpact {

  0%,
  100% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }

  15% {
    transform: translate(3px, 0) scale(0.85);
    opacity: 0.7;
  }

  /* Quick impact */
  30% {
    transform: translate(-3px, 0) scale(0.85);
    opacity: 0.7;
  }

  45% {
    transform: translate(3px, 0) scale(0.85);
    opacity: 0.7;
  }

  60% {
    transform: translate(-3px, 0) scale(0.85);
    opacity: 0.7;
  }

  80% {
    transform: scale(1.05);
    opacity: 1;
  }

  /* Slight rebound */
}

/* New subtle screen shake */
@keyframes screenShake {

  0%,
  100% {
    transform: translate(0, 0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate(-2px, 0);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translate(2px, 0);
  }
}

/* Define Variables inside the main container class */
.rpsPhaseContainer {
  /* --- Scoped CSS Variables --- */
  --font-game: "Press Start 2P", cursive;
  --font-body: "VT323", monospace;
  --color-accent: #00ff9d;
  --color-accent-hover: #80ffce;
  --color-text-base: #e0e0e0;
  --color-text-muted: #a0a0a0;
  --color-panel: rgba(15, 12, 41, 0.92);
  /* Slightly adjusted opacity */
  --color-panel-border: rgba(0, 255, 157, 0.7);
  /* Brighter border */
  --color-pixel-shadow: rgba(0, 0, 0, 0.8);
  /* Darker shadow */
  --color-button-bg: rgba(255, 255, 255, 0.12);
  --color-button-border: rgba(255, 255, 255, 0.35);
  --color-button-hover-bg: rgba(0, 255, 157, 0.2);
  /* Slightly more intense hover bg */
  --color-button-hover-border: var(--color-accent-hover);
  --color-win: #2ecc71;
  --color-lose: #e74c3c;
  --color-draw: #f39c12;
  --shadow-depth-1: 3px;
  --shadow-depth-2: 6px;
  --shadow-depth-hover: 8px;
  /* Increased hover shadow */
  /* --- End Scoped Variables --- */

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 35px 30px;
  /* Increased padding */
  /* Add a subtle diagonal line background */
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.02) 25%, transparent 25%),
    linear-gradient(225deg, rgba(255, 255, 255, 0.02) 25%, transparent 25%),
    linear-gradient(45deg, rgba(255, 255, 255, 0.02) 25%, transparent 25%),
    linear-gradient(315deg, rgba(255, 255, 255, 0.02) 25%, var(--color-panel) 25%);
  background-size: 10px 10px;
  /* Adjust size of pattern */
  border: 2px solid var(--color-panel-border);
  box-shadow: var(--shadow-depth-2) var(--shadow-depth-2) 0 0 var(--color-pixel-shadow);
  border-radius: 0;
  width: 90%;
  max-width: 650px;
  /* Increased max-width */
  margin: 30px auto;
  color: var(--color-text-base);
  position: relative;
  min-height: 300px;
  /* Increased min-height */
  font-family: var(--font-game);
  animation: fadeInScaleUp 0.5s ease-out forwards;
}

.rpsTitle {
  font-size: 1.4em;
  /* Increased size */
  margin-bottom: 35px;
  text-align: center;
  color: var(--color-accent);
  text-shadow: 1px 1px 0px var(--color-pixel-shadow);
  overflow-wrap: break-word;
  /* Allow title to wrap */
  max-width: 100%;
  /* Ensure it respects container padding */
}

.choicesContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 25px;
  /* Increased gap */
  margin-bottom: 30px;
}

.choiceButton {
  background-color: var(--color-button-bg);
  border: 2px solid var(--color-button-border);
  border-radius: 0;
  width: 110px;
  /* Increased size */
  height: 110px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.15s ease-out;
  box-shadow: var(--shadow-depth-1) var(--shadow-depth-1) 0 0 var(--color-pixel-shadow);
  transform-origin: bottom center;
  /* For pop-in animation */
  animation: pixelPopIn 0.4s ease-out backwards;
  /* Apply pop-in animation */
}

.choiceButton:hover:not(:disabled) {
  /* More pronounced hover effect */
  transform: translate(calc(var(--shadow-depth-1) * -0.7), calc(var(--shadow-depth-1) * -0.7));
  /* Slightly less translation */
  box-shadow: var(--shadow-depth-hover) var(--shadow-depth-hover) 0 0 var(--color-pixel-shadow), 0 0 8px rgba(0, 255, 157, 0.4);
  /* Add subtle glow */
  border-color: var(--color-button-hover-border);
  background-color: var(--color-button-hover-bg);
}

.choiceButton:active:not(:disabled) {
  /* Clearer pressed state */
  transform: translate(2px, 2px);
  /* Push in further */
  box-shadow: 1px 1px 0 0 var(--color-pixel-shadow);
  background-color: rgba(0, 255, 157, 0.1);
  /* Slightly dim on press */
}

.choiceButton.selected {
  /* Enhanced selected state */
  background-color: var(--color-accent);
  border-color: var(--color-text-base);
  /* Keep it looking 'pressed' */
  transform: translate(2px, 2px);
  box-shadow: 1px 1px 0 0 var(--color-pixel-shadow);
  cursor: default;
  animation: none;
  /* Disable pop-in if selected */
}

.choiceButton.selected .choiceIcon {
  color: #0a0519;
  /* Darker icon on accent bg */
}

.choiceButton:disabled:not(.selected) {
  opacity: 0.5;
  cursor: not-allowed;
  box-shadow: var(--shadow-depth-1) var(--shadow-depth-1) 0 0 var(--color-pixel-shadow);
  animation: none;
  /* Disable pop-in if disabled */
}

.choiceIcon {
  font-size: 3.8em;
  /* Increased size */
  color: var(--color-text-base);
  transition: color 0.15s ease-out;
  /* Smooth color transition */
}

.waitingMessage {
  font-family: var(--font-body);
  font-size: 1.5em;
  /* Increased size */
  color: var(--color-text-muted);
  margin-top: 25px;
  animation: pulseText 1.5s infinite ease-in-out;
}

/* --- Result Modal Styles --- */
.rpsResultModal {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(10, 5, 20, 0.97);
  /* Darker overlay */
  display: flex;
  align-items: center;
  justify-content: center;
  border: 3px solid transparent;
  /* Start with transparent border for animation */
  border-radius: 0;
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.5s ease, visibility 0s linear 0.5s;
  padding: 25px;
}

.rpsResultModal.show {
  opacity: 1;
  visibility: visible;
  transition: opacity 0.5s ease;
  /* Apply subtle border pulse when shown */
  animation: subtleBorderPulse 2s infinite linear;
}

/* Hide transition for modal if needed */
/* .rpsResultModal.hide { ... } */

.rpsResultContent {
  text-align: center;
  color: var(--color-text-base);
  width: 100%;
  animation: fadeInScaleUp 0.5s 0.2s ease-out forwards;
  /* Add delay to content fade-in */
}

.resultTitle {
  font-size: 1.8em;
  /* Increased size */
  margin-bottom: 30px;
  color: var(--color-accent);
  text-shadow: 1px 1px 0px var(--color-pixel-shadow);
  overflow-wrap: break-word;
  /* Allow title to wrap */
  max-width: 100%;
  /* Ensure it respects container padding */
}

.rpsPlayers {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 25px;
  /* Slightly Reduced gap from 30px */
  margin-bottom: 30px;
}

.rpsPlayer {
  border: 2px solid var(--color-button-border);
  border-radius: 0;
  padding: 15px;
  /* Increased padding */
  background-color: var(--color-button-bg);
  box-shadow: var(--shadow-depth-1) var(--shadow-depth-1) 0 0 var(--color-pixel-shadow);
  transition: border-color 0.3s ease, box-shadow 0.3s ease, opacity 0.3s ease;
  /* Added opacity transition */
}

/* Existing winner glow */
.rpsPlayer.winnerGlow {
  animation: pulseGlow 1.5s infinite ease-in-out;
}

/* New styles for loser and draw */
.rpsPlayer.loser {
  border-color: var(--color-lose);
  /* Keep shadow depth consistent but use loser color */
  box-shadow: var(--shadow-depth-1) var(--shadow-depth-1) 0 0 var(--color-lose);
  opacity: 0.6;
  /* Slightly more faded */
}

.rpsPlayer.draw {
  border-color: var(--color-draw);
  /* Keep shadow depth consistent but use draw color */
  box-shadow: var(--shadow-depth-1) var(--shadow-depth-1) 0 0 var(--color-draw);
  /* Optionally add a subtle effect for draw, or keep it neutral */
  /* opacity: 0.9; */
}

.rpsPlayerChoice {
  font-size: 3.8em;
  /* Increased size */
}

.rpsVs {
  font-size: 2em;
  /* Increased size */
  font-weight: normal;
  color: var(--color-text-muted);
}

.rpsResultMessage {
  font-size: 1.4em;
  font-weight: normal;
  padding: 8px 15px;
  border-radius: 0;
  display: inline-block;
  border: 2px solid var(--color-text-base);
  box-shadow: var(--shadow-depth-1) var(--shadow-depth-1) 0 0 var(--color-pixel-shadow);
  color: var(--color-text-base);
  background-color: transparent;
  margin-top: 15px;
  transition: all 0.3s ease;
  /* Smooth transitions */
  overflow-wrap: break-word;
  /* Allow message to wrap */
  max-width: 100%;
  /* Ensure it respects container padding */
}

.rpsResultMessage.winner {
  border-color: var(--color-win);
  color: var(--color-win);
  text-shadow: 0 0 8px var(--color-win);
  transform: scale(1.05);
  /* Slightly larger winner message */
}

.rpsResultMessage.loser {
  border-color: var(--color-lose);
  color: var(--color-lose);
}

.rpsResultMessage.draw {
  border-color: var(--color-draw);
  color: var(--color-draw);
}

/* --- Media Queries --- */
@media (max-width: 768px) {
  .rpsPhaseContainer {
    padding: 25px 20px;
    min-height: 250px;
    max-width: 95%;
  }

  .rpsTitle {
    font-size: 1.2em;
    margin-bottom: 25px;
  }

  .choicesContainer {
    gap: 15px;
  }

  .choiceButton {
    width: 100px;
    height: 100px;
  }

  .choiceIcon {
    font-size: 3em;
  }

  .resultTitle {
    font-size: 1.5em;
  }

  .rpsPlayers {
    gap: 20px;
  }

  .rpsPlayerChoice {
    font-size: 3em;
  }

  .rpsVs {
    font-size: 1.8em;
  }

  .rpsResultMessage {
    font-size: 1.4em;
    padding: 8px 15px;
  }
}

@media (max-width: 480px) {
  .rpsPhaseContainer {
    padding: 20px 15px;
    min-height: 220px;
    box-shadow: var(--shadow-depth-1) var(--shadow-depth-1) 0 0 var(--color-pixel-shadow);
  }

  .rpsTitle {
    font-size: 1em;
    margin-bottom: 20px;
  }

  .choicesContainer {
    gap: 15px;
    margin-bottom: 20px;
  }

  .choiceButton {
    width: 90px;
    height: 90px;
    box-shadow: 2px 2px 0 0 var(--color-pixel-shadow);
  }

  .choiceButton:hover:not(:disabled) {
    box-shadow: 3px 3px 0 0 var(--color-pixel-shadow);
  }

  .choiceIcon {
    font-size: 3em;
  }

  .waitingMessage {
    font-size: 1.2em;
  }

  .resultTitle {
    font-size: 1.5em;
    margin-bottom: 20px;
  }

  .rpsPlayers {
    gap: 15px;
    flex-direction: column;
  }

  .rpsPlayer {
    padding: 10px;
  }

  .rpsVs {
    margin: 5px 0;
    font-size: 1.5em;
  }

  .rpsPlayerChoice {
    font-size: 3em;
  }

  .rpsResultMessage {
    font-size: 1.3em;
    padding: 8px 12px;
    box-shadow: 2px 2px 0 0 var(--color-pixel-shadow);
  }
}

/* Add the pixelScalePulse animation definition */
/* Remember to apply .pixelScalePulse class to your countdown timer element in RpsPhase.jsx */
.countdownTimer {
  /* Example class name - replace with actual */
  /* Apply the animation here if you have a static class */
  /* animation: pixelScalePulse 1s infinite steps(1, end); */
  /* Add other countdown styles */
  font-size: 3em;
  color: var(--color-accent);
  margin-bottom: 20px;
  text-shadow: 2px 2px 0px var(--color-pixel-shadow);
}

/* Note: For staggered choice button animation, apply inline style in JSX:
   style={{animationDelay: `${index * 0.08}s`}} on each button map */

/* Classes to apply the clash animations */
.clashWinner .rpsPlayerChoice {
  /* The --attack-translate-x will be set inline based on player position */
  animation: clashAttack 0.7s ease-out forwards;
  /* Slightly longer duration */
}

.clashLoser .rpsPlayerChoice {
  animation: clashImpact 0.7s ease-in-out forwards;
  /* Slightly longer duration */
}

/* Class to apply screen shake */
.shakeEffect {
  animation: screenShake 0.3s linear;
}

/* Existing winner glow */
.rpsPlayer.winnerGlow {
  animation: pulseGlow 1.5s infinite ease-in-out;
}